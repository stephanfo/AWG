<?php

namespace GalleryBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PhotoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PhotoRepository extends \Doctrine\ORM\EntityRepository
{
    public function getOrderPhotos($order_id)
    {
        return $this->createQueryBuilder('photo')
            ->leftjoin('photo.details', 'detail')
            ->where('detail.order = :order_id')
            ->setParameter('order_id', $order_id)
            ->getQuery()
            ->getResult();
    }

    public function getActivePhotos($page = null, $nbPerPage = null, $sortLike = false)
    {
        $query = $this->createQueryBuilder('photo')
            ->leftJoin('photo.gallery', 'gallery')
            ->addSelect('gallery')
            ->where('gallery.active = :true')
            ->setParameter('true', true)
            ;
        
        if ($sortLike)
            $query->orderBy('photo.likeCount', "DESC");
        
        $query
            ->addOrderBy("gallery.date", "ASC")
            ->addOrderBy("photo.id", "ASC")
            ;

        if (!is_null($page) && !is_null($nbPerPage))
            $query
                ->setFirstResult(($page - 1) * $nbPerPage)
                ->setMaxResults($nbPerPage);

        return new Paginator($query, true);
    }
}
